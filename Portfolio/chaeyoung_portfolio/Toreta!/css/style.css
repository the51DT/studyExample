html,
body {
  width: 100%;
  height: 100%;
}

.blind {
	opacity: 0;
}

/* 첫번째 섹션에 대한 css를 설정해줍니다. */
#section1 {
    /* relative로 position을 설정해 하위 요소들의 기준이 되도록 합니다. */
    position: relative;
    /* 가로는 100%로 사이트의 가로폭을 꽉 채우고 */
    width: 100%;
    /* 높이는 vh단위를 사용하여 브라우저 내에서 보이는 창의 높이만큼 보이도록 합니다. */
    height: 100vh;
	overflow: hidden;
}

/* section1에 배치된 메인 이미지의 크기를 사이트의 크기에 맞게 조절해줍니다. */
#section1 img {
	width: 100%;
	height: 100%;
}

/* 데코 요소인 날짜가 들어갈 원에 대해 설정해줍니다. */
.date {
	/* section1을 기준으로 하여 position을 absolute로 설정하고 */
	position: absolute;
	/* 디자인 시안에 맞춰 위치를 조정해줍니다. */
	top: 45px;
	left: 65px;
	/* 크기 또한 디자인 시안에 맞춰 진행합니다. */
	width: 84px;
	height: 84px;
	border: 4px solid white;
	/* 원을 만들기 때문에 border-radius를 50%로 설정합니다. */
	border-radius: 50%;
}

/* 원 안에 들어갈 날짜의 위치와 크기도 설정해줍니다. */
.date p {
	color: white;
	font-weight: bold;
	font-size: 14px;
	/* margin을 이용해 원 안에서의 위치를 지정해줍니다. */
	margin-top: 25px;
	margin-left: 23px;
}

/* 데코 요소인 좌측의 원에 대해서도 설정해줍니다. */
.circle {
	/* 이 또한 section1을 기준으로 하여 position을 absolute로 설정하고 */
	position: absolute;
	top: 486px;
	left: 68px;
}

.circle li {
	/* list를 이용해 원을 만들 것이기 때문에 li css 내에서 설정해줍니다. */
	width: 6px;
	height: 6px;
	background-color: white;
	border-radius: 50%;
	margin-bottom: 27px;
}
/* 메뉴 버튼의 더 보기 버튼과 텍스트에 대해 코딩으로 지정해줍니다. */
.menuBtn {
	position: absolute;
	top: 64px;
	right: 140px;
	width: 19px;
	height: 5px;
	background-color: white;
}

.menuBtn::before {
	content: "";
	position: absolute;
	margin-top: 10px;
	width: 19px;
	height: 5px;
	background-color: white;
}

.menu p {
	position: absolute;
	top: 58px;
	right: 70px;
	color: white;
	font-weight: bold;
	font-size: 20px;
}

/* 링크 태그가 적용된 메뉴애 마우스 오버 시 하이라이팅 효과가 나오도록 합니다. */
a .menu :hover .menu {
	background-color: var(--color-y);
}
a p:hover {
	color: var(--color-y);
}

a .menuBtn:hover {
	background-color: var(--color-y);
}

a .menuBtn::before:hover {
	background-color: var(--color-y);
}

/* 데코 요소 중 일부인 재생 버튼의 위치를 지정해줍니다. */
.triangle {
	/* 이 또한 section1을 기준으로 하여 position을 absolute로 설정합니다. */
	position: absolute;
	top: 299px;
	left: 1837px;
}

.slogan {
	position: absolute;
	top: 400px;
	left: 0;
    right: 0;
	text-align: center;
	color: white;
	font-weight: bold;
	font-size: 200px;
	line-height: 0.8em;
}

/* 텍스트 중 일부만 색을 변경하기 위해 클래스를 생성하여 적용시킵니다. */
.colorY {
	color: var(--color-y);
}

/* 메인 슬로건을 꾸밀 스티커 요소를 배치합니다. */
.niceStk {
	position: absolute;
	top: 341px;
	left: 466px;
	z-index: 10;
}

.goodStk {
	position: absolute;
	top: 317px;
	left: 1289px;
	z-index: 10;
}

.smileStk {
	position: absolute;
	top: 602px;
	left: 427px;
	z-index: 10;
}

.oStk {
	position: absolute;
	top: 571px;
	left: 1004px;
	z-index: 10;
}

/* 가로로 이동하는 텍스트 애니메이션에 대한 css를 설정해줍니다. */
.marquee.horizontal {
    /* position은 absolute로 설정하여 section1을 기준으로 원하는 위치에 지정할 수 있도록 합니다. */
	position: absolute;
    /* 위를 기준으로 맨 위에 위치하도록 해주며 */
	top: 900px;
    /* 텍스트 크기를 21px로 설정해줍니다. */
	font-size: 21px;
    /* 텍스트 영역을 넘어가는 부분은 안 보이게 설정합니다. */
	white-space: nowrap;
    /* 텍스트가 이동하는 애니메이션인 marquee_h과 연결해줍니다. */
    /* 15초동안 설정한 애니메이션이 실행되게 하며 무한 반복하게 설정합니다. */
	animation: marquee_h 15s linear infinite;
    /* 애니메이션이 실행되는 시점을 10초 전으로 하여
    사이트에 접속하자마자 봤을 때에도 어색하지 않도록 합니다. */
	animation-delay: -10s;
    /* 텍스트 애니메이션이 최상위 레이어에 위치해야 하기 때문에
    z-index 값을 많이 줍니다. */
    z-index: 100;
    /* 총 가로 길이를 section1을 기준으로 100%으로 설정해줍니다. */
    width: 100%;
    /* 공백을 상하에는 0, 좌우에는 자동값을 주어 가운데에 위치하도록 해줍니다. */
	margin: 0 auto;
    /* 설정한 크기값을 넘어가는 부분은 안 보이게 처리해줍니다. */
    overflow: hidden;
	color: white;
}  
/* 애니메이션이 어떤 식으로 실행될 지에 대해 keyframes 기능을 이용해 설정합니다. */
@keyframes marquee_h {
    /* 처음에는 텍스트의 들여쓰기를 0으로 설정하고 */
	0% {
		text-indent: 0em
	}
    /* 애니메이션의 최종 시점에 들여쓰기를 -값으로 주어 화면 밖으로 이동하게끔 합니다. */
	100% {
		text-indent: -127.5em
	}
}

/* section2 영역입니다. */
#section2 {
	/* 배경색을 파란색으로 설정해주고 */
	background-color: var(--color-b);
	overflow: hidden;
	width: 100%;
	height: 100vh;
	/* position을 relative로 설정해 하위 콘텐츠들의 기준이 되어줍니다. */
	position: relative;
	z-index: 10;
}

/* 데코 요소가 될 좌측 원 요소입니다. */
.circleGroupH {
	position: absolute;
	top: 412px;
	left: 70px;
}

.circleH li {
	width: 6px;
	height: 6px;
	background-color: white;
	border-radius: 50%;
	margin-right: 25px;
	display: inline-block;
}

/* 스티커 위치를 지정해줍니다. */
.coolDec {
	position:absolute;
	top: 460px;
	left: 574px;
	z-index: 10;
}

.type {
	position: absolute;
	top: 440px;
	left: 60px;
	font-size: 100px;
	color: white;
}
/* 버튼의 스타일과 위치를 지정해줍니다. */
.choose {
	position: absolute;
	top: 833px;
	left: 68px;
	padding: 20px;
	background-color: var(--color-y);
	border: none;
	font-size: 30px;
	font-weight: bold;
	color: var(--color-b);
}

/* 이미지 갤러리 배경에 있는 원을 구성해줍니다. */
.YellowCircle {
	position:absolute;
	top: -100px;
	left: 960px;
	width: 1476px;
	height: 1476px;
	border-radius: 50%;
	background-color: var(--color-y);
}

/* 갤러리 영역입니다. */
.gallery{
	/* 각 오브젝트가 보여질 영역을 지정합니다. */
    width:800px;
	height: 1000px;
}

.gallery .view{
	/* 지정한 크기 이외의 부분은 안 보이도록 처리합니다. */
    overflow:hidden;
    position:absolute;
    width:100%;
    height:100%;
	top:0;
    right:300px;
}

.gallery .view .view-container{
	/* 콘텐츠들을 포함하고 있는 view-container의 높이를 view를 기준으로 하여 100%로 설정해줍니다. */
    height:100%;
}

.gallery .view .view-container::after{
	/* clear 속성을 통해 float 속성을 해제시킵니다. */
    content:'';
    display:block;
    clear:both;
}

.gallery .view .view-item{
    float:left;
}
/* display를 block으로 설정하여 이미지들이 한 줄로 배치되도록 합니다. */
.gallery .view .view-item img{
    display:block;
}

/* rotate 속성을 통해 이미지 간 각도에 통일성을 부여합니다. */
.ToretaCanSmall {
	transform: rotate(-30deg);
	height: 400px !important;
	position: relative;
	top: 250px;
	right: -150px;
}

.ToretaCan {
	position: relative;
	top: 100px;
}

.ToretaBottle {
	transform: rotate(-30deg);
	height: 500px !important;
}

/* 리스트를 담고 있는 파랑색 원의 위치와 영역을 설정해줍니다. */
.BlueCircle {
	position:absolute;
	top: 145px;
	left: 1304px;
	width: 788px;
	height: 788px;
	border-radius: 50%;
	background-color: var(--color-b);
	box-shadow: -30px 40px 50px 28px rgba(0, 0, 0, 0.212);
}
/* 리스트에 flex를 주어 리스트끼리 동일한 비율로 지정되도록 합니다. */
.gallery ul.list{
    display:flex;
    width:100%;
    margin:0;
    padding:0 10px;
    list-style:none;
	font-size: 40px;
	color: white;
}

.gallery .view + ul.list{
    margin-top:20px;
}

.gallery ul.list li{
    width:25%;
    padding-right:10px;
    padding-left:10px;
    flex:1;
}

.gallery ul.list li a{
	padding-left: 100px;
    overflow:hidden;
    display:block;
    position:relative;
    width:100%;
	color: white;
}

.gallery ul.list li.selected a{
    cursor:default;
	color: var(--color-y);
}
/* 활성화된 버튼 앞에 디자인작업대로 원을 삽입하여
사용자가 어느 버튼이 눌린건지 더 명확히 알 수 있도록 합니다. */
.gallery ul.list li.selected a::before {
	position: absolute;
	top: 20px;
	left: 70px;
	width: 10px;
	height: 10px;
	border-radius: 50%;
	content: "";
	background-color: var(--color-y);
}

/* 이미지 갤러리 리스트의 위치를 지정해줍니다. */
.type1 {
	position: absolute;
	top: 305px;
	left: 1373px;
	z-index: 10;
}

.type2 {
	position: absolute;
	top: 505px;
	left: 1273px;
	z-index: 10;
}

.type3 {
	position: absolute;
	top: 705px;
	left: 1373px;
	z-index: 10;
}

/* section3 영역입니다. */
#section3 {
	position: relative;
	background-color: var(--color-y);
}

.melt {
	position: absolute;
	top: 0;
	margin: 0 auto;
	opacity: 0;
}

/* 흘러내리는 이미지를 더 돋보이게 할 애니메이션을 제작합니다. */
.ani {
	position: absolute;
	animation-name: ani;
	animation-fill-mode: forwards;
	animation-duration: 3s;
	transition: all 0.5s linear;
}
/* 불투명도가 0으로 안 보였다가 위에서 아래로 내려오며 보이게 하여
내려오는 것 같은 착각이 들도록 합니다. */
@keyframes ani {
	from {
		opacity: 0;
		top: -100px;
	}
	to {
		opacity: 1;
		top: 0;
	}
}

/* 토레타 오브젝트가 둥둥 떠다니게 합니다. */
.ToretaBottleFloat {
	height: 1100px;
	position: absolute;
	top: 215px;
	left: 668px;
	/* 애니메이션과 연결하여 */
	animation-name: float;
	animation-direction: alternate;
	animation-duration: 2s;
	/* 무한 반복하도록 하여 계속 둥둥 떠다니게 합니다. */
	animation-iteration-count: infinite;
	z-index: 120;
	transition: all 0.2s linear;
}

@keyframes float {
	from {
		top: 180px;
	}
	to {
		top: 50px;
	}
}

/* 데코 스티커 요소입니다. */
.sweetStk {
	position: absolute;
	top: 353px;
	left: 433px;
	z-index: 200;
	transition: all 0.5s linear;
	opacity: 0;
}
/* 스티커가 붙는 것 같은 효과를 줄 애니메이션입니다. */
.stickerAni {
	animation-name: sticker;
	animation-duration: 0.3s;
	animation-fill-mode: forwards;
}

@keyframes sticker {
	from {
		width: 500%;
	}
	to {
		width: 50%;
		z-index: 200;
		opacity: 1;
	}
}

.moisture {
	position: absolute;
	top: 353px;
	left: 516px;
	z-index: 200;
	opacity: 0;
}

.collSStr{
	position: absolute;
	top: 353px;
	left: 515px;
	z-index: 200;
	transition: all 0.5s linear;
}

.zero {
	position: absolute;
	top: 353px;
	left: 541px;
	z-index: 200;
	transition: all 0.5s linear;
}
/* 세로로 진행되는 텍스트 애니메이션입니다. */
@supports (writing-mode: vertical-rl) or (-webkit-writing-mode: vertical-rl)
{
	/* 우선 텍스트를 돌려야 하기에 rotate를 이용하여 회전시켜줍니다. */
	.vertical
	{
		-webkit-transform: rotate(180deg);
		transform: rotate(180deg);
	}
}

.vertical {
	overflow: hidden;
	position: absolute;
	top: 0;
	left: 50px;
	-ms-writing-mode: tb-rl; /* old syntax, IE */
	-webkit-writing-mode: vertical-rl;
	writing-mode: vertical-rl;
	max-height: 100vh;
	padding: 0.5em;
	text-align: right;
	color: var(--color-b);
	font-size: 21px;
	font-weight: bold;
	white-space: nowrap;
	box-sizing: border-box;
	animation: vertical 5s linear infinite;
	animation-iteration-count: infinite;
	overflow: hidden;
}   

@keyframes vertical {
	0% {
		top: -100%;
	}
	100% {
		top: 200%;
	}
}

@supports (writing-mode: vertical-rl) or (-webkit-writing-mode: vertical-rl)
{
	.vertical2
	{
		-webkit-transform: rotate(180deg);
		transform: rotate(180deg);
	}
}

.vertical2 {
	overflow: hidden;
	position: absolute;
	top: 0;
	right: 50px;
	-ms-writing-mode: tb-rl; /* old syntax, IE */
	-webkit-writing-mode: vertical-rl;
	writing-mode: vertical-rl;
	max-height: 100vh;
	padding: 0.5em;
	text-align: right;
	color: var(--color-b);
	font-size: 21px;
	font-weight: bold;
	white-space: nowrap;
	box-sizing: border-box;
	animation: vertical 1s linear infinite;
	animation-delay: -5s;
	animation-duration: 5s;
	animation-iteration-count: infinite;
}    
/* section4 영역입니다. */
#section4 {
	background-color: var(--color-g);
	overflow: hidden;
}

.marquee.horizontal2 {
	position: absolute;
	top: 50px;
	color: var(--color-y);
	font-size: 21px;
	font-weight: bold;
	width: 100%;
	height: 200%;
	margin: 0 auto;
	overflow: hidden;
	white-space: nowrap;
	box-sizing: border-box;
	animation: marquee_h 10s linear infinite;
	animation-delay: -10s;
	animation-duration: 15s;
	animation-iteration-count: infinite;
}

.marquee.horizontal3 {
	position: absolute;
	bottom: 45px;
	color: var(--color-y);
	font-size: 21px;
	font-weight: bold;
	width: 100%;
	margin: 0 auto;
	overflow: hidden;
	white-space: nowrap;
	box-sizing: border-box;
	animation: marquee_h 10s linear infinite;
	animation-delay: -10s;
	animation-duration: 15s;
	animation-iteration-count: infinite;
	z-index: 100;
}

/* WAVE */
.waves {
	position:absolute;
	left: 0;
	bottom: 0px;
	width: 100%;
	min-height:200px;
	max-height:300px;
	z-index: 10;
  }
  
  /* Animation */
  
  .parallax > use {
	  /* 패스를 조작하여 파동이 치는 것처럼 보이도록 합니다. */
	  /* 무한 반복하도록 설정해주고 */
	animation: move-forever 25s cubic-bezier(.55,.5,.45,.5)     infinite;
  }
  /* 각 파동에 다른 delay와 duration값을 넣어 마치 다른 파동이 치는 것처럼 보이게 합니다. */
  .parallax > use:nth-child(1) {
	animation-delay: -2s;
	animation-duration: 7s;
  }
  .parallax > use:nth-child(2) {
	animation-delay: -3s;
	animation-duration: 10s;
  }
  .parallax > use:nth-child(3) {
	animation-delay: -4s;
	animation-duration: 13s;
  }

  @keyframes move-forever {
	0% {
	 transform: translate3d(-90px,0,0);
	}
	100% { 
	  transform: translate3d(85px,0,0);
	}
  }

  .vertical3 {
	overflow: hidden;
	position: absolute;
	top: 0;
	left: 50px;
	-ms-writing-mode: tb-rl; /* old syntax, IE */
	-webkit-writing-mode: vertical-rl;
	writing-mode: vertical-rl;
	max-height: 100vh;
	padding: 0.5em;
	text-align: right;
	color: white;
	font-size: 21px;
	font-weight: bold;
	white-space: nowrap;
	box-sizing: border-box;
	animation: vertical 1s linear infinite;
	animation-delay: -5s;
	animation-duration: 5s;
	animation-iteration-count: infinite;
}    

.vertical4 {
	overflow: hidden;
	position: absolute;
	top: 0;
	right: 50px;
	-ms-writing-mode: tb-rl; /* old syntax, IE */
	-webkit-writing-mode: vertical-rl;
	writing-mode: vertical-rl;
	max-height: 100vh;
	padding: 0.5em;
	text-align: right;
	color: white;
	font-size: 21px;
	font-weight: bold;
	white-space: nowrap;
	box-sizing: border-box;
	animation: vertical 1s linear infinite;
	animation-delay: -5s;
	animation-duration: 5s;
	animation-iteration-count: infinite;
}   

/* section5 영역입니다. */
  #section5 {
	  position: relative;
	  width: 100%;
	  height: 100%;
	  background-color: #2ebdff;
  }

  /* section6 영역입니다. */
  #section6 {
		position: relative;
		width: 100%;
		height: 100%;
	  background-color: white;
  }

  .marquee.horizontal4 {
	position: absolute;
	top: 50px;
	color: #2ebdff;
	font-size: 21px;
	font-weight: bold;
	width: 100%;
	margin: 0 auto;
	overflow: hidden;
	white-space: nowrap;
	box-sizing: border-box;
	animation: marquee_h 10s linear infinite;
	animation-delay: -10s;
	animation-duration: 15s;
	animation-iteration-count: infinite;
	z-index: 100;
}

.marquee.horizontal5 {
	position: absolute;
	bottom: 45px;
	color: #2ebdff;
	font-size: 21px;
	font-weight: bold;
	width: 100%;
	margin: 0 auto;
	overflow: hidden;
	white-space: nowrap;
	box-sizing: border-box;
	animation: marquee_h 10s linear infinite;
	animation-delay: -10s;
	animation-duration: 15s;
	animation-iteration-count: infinite;
	z-index: 100;
}

/* 탄산 애니메이션 영역입니다. */
  .inner {
	position: relative;
  }
  .inner::before,
  .inner::after {
	pointer-events: none;
	z-index: 1;
	position: absolute;
	content: '';
	display: block;
	height: 2px;
	width: 8px;
	top: 50%;
	background: #fff;
  }
  .inner::before {
	right: 15.26px;
	transform: translateY(-50%) rotate(-45deg);
  }
  .inner::after {
	right: 20px;
	transform: translateY(-50%) rotate(45deg);
  }
  input[type="range"] {
	width: 100%;
	margin-top: 16px;
  }

  .fix {
	  position: fixed;
  }
  
  /* 푸터 영역입니다. */
  footer {
	  width: 100%;
	  height: 336px;
	  background-color: #2ebdff;
  }

  .wrap {
	  position: relative;
	  max-width: 1660px;
	  margin: 0 auto;
	  color: white;
	  font-weight: bold;
	  font-size: 20px;
	  line-height: 1em;
  }

  .wrap  p {
	  margin-top: 135px;
	  display: inline-block;
  }

  .right {
	  position: absolute;
	right: 0;
  }